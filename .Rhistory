plot(colSums(geno), xlab = "Sample Index", ylab = "Out of 128")
plot(colSums(geno), xlab = "Sample Index", ylab = "Out of the 128")
plot(colSums(geno), xlab = "Sample Index", ylab = "Variant number")
sapply(vars, function(x) table(geno[x, ], mdata$AD2))
plot(colSums(geno), xlab = "Sample Index", ylab = "Alternative allele number")
colSums(geno)
setwd("~/Dropbox/GitHub/Adsp")
load("Race/data.rdt")
white = data$init$white
white
latino = data$init$latino
latino
load("data/lodALL.rdt")
pheatmap(cor(lodALL), display_numbers = T, border_color = "white", treeheight_col = 0, treeheight_row = 1e2)
library(pheatmap)
pheatmap(cor(lodALL), display_numbers = T, border_color = "white", treeheight_col = 0, treeheight_row = 1e2)
nrow(lodALL)
lod12 <- lodALL[apply(lodALL, 1, function(x) max(x[1:2]) > 10), ]
plot(lod12,  xlim = c(0, 25), ylim = c(7, 35))
rm(list = ls())
setwd("~/Dropbox/GitHub/Adsp")
load("data/glmList_rare.rdt")
head(gwas)
gwas_lod <- filter(gwas, LOD > 15) # permutation cut
cor(gwas_lod$LOD, gwas_lod$LOD.LMM)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM)
?abline
lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
abline(a = 3.211, b = 1.239)
head(gwas_lod)
snp = gwas_lod[gwas_lod$SNP == "Y", ]
head(snp)
cor(snp$LOD, snp$LOD.LMM)
high = gwas[gwas$LOD > 19, ]
cor(high$LOD, high$LOD.LMM)
x = lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
str(x)
x$coefficients
x$coefficients[1]
abline(x$coefficients)
gwas_lod <- filter(gwas, LOD > 19) # permutation cut
x = lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)")
abline(x$coefficients)
gwas_lod <- filter(gwas, LOD > 15) # permutation cut
x = lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)")
abline(x$coefficients)
head(gwas_lod)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)",
col = gwas_lod$SNP)
gwas_lod$SNP
as.numeric(gwas_lod$SNP)
as.factor(gwas_lod$SNP)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)",
col = as.factor(gwas_lod$SNP))
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)", shape = 6,
col = as.factor(gwas_lod$SNP))
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)", pch = 19,
col = as.factor(gwas_lod$SNP))
abline(x$coefficients)
abline(x$coefficients, col = "blue")
col = as.factor(gwas_lod$SNP)
x = lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
col = as.factor(gwas_lod$SNP) + 1
col = as.numeric(as.factor(gwas_lod$SNP))
x = lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)", pch = 19, col = col)
col = as.numeric(as.factor(gwas_lod$SNP)) + 1
x = lm(gwas_lod$LOD.LMM ~ gwas_lod$LOD)
plot(gwas_lod$LOD, gwas_lod$LOD.LMM, xlab = "GLM (Stan)", ylab = "LMM (QTLRel)", pch = 19, col = col)
abline(x$coefficients, col = "blue")
cols = as.numeric(as.factor(gwas_lod$SNP)) + 1
legend("bottomright", c("SNP", "INDEL"), fill=cols, cex = 0.75 ,bg="white")
legend("bottomright", c("SNP", "INDEL"), fill= unique(cols), cex = 0.75 ,bg="white")
?text
text(x = 20, y = 15, labels = "p2")
text(x = 20, y = 25, labels = "p2")
text(x = 20, y = 25, labels = "Pho = 0.895")
text(x = 20, y = 25, labels = "Pho = 0.895", cex = 2)
pho = cor(gwas_lod$LOD, gwas_lod$LOD.LMM)
(pho = cor(gwas_lod$LOD, gwas_lod$LOD.LMM))
text(x = 20, y = 25, labels = paste0("Pho = ", pho), cex = 2)
ceiling(pho)
?ceiling
round(pho)
round(pho, 3)
text(x = 20, y = 25, labels = paste0("Pho = ", round(pho, 3)), cex = 2)
geno = genoList$glm
load("./data/mdata.rdt")
load("./data/genoList.rdt")
geno = genoList$glm
geno = genoList$glm_rare
dim(geno)
str(geno)
all(colnames(geno) == mdata$SRR)
vars = rownames(geno)
vars = vars[ vars != "" ]
colSums(geno)
plot(colSums(geno), xlab = "Sample Index", ylab = "Alternative allele number")
which(colSums(geno) > 30)
mdata[which(colSums(geno) > 30), ]
sapply(vars, function(x) table(geno[x, ], mdata$AD2))
library(dplyr)
library(ggplot2)
library(GenomicFeatures)
library(VariantAnnotation)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(DNAcopy)
library(Gviz)
rm(list = ls())
setwd("~/Dropbox/GitHub/Lupus/WES")
sf_bxsb = "./BXSB_variants_filtered.vcf.gz"
scanVcfHeader(sf_bxsb)
vcf_bxsb = readVcf(sf_bxsb, genome = "mm10")
vcf_bxsb = vcf_bxsb[fixed(vcf_bxsb)$FILTER == "PASS"]
vcf_bxsb = vcf_bxsb[width(vcf_bxsb) == 1] # SNP only
vcf_bxsb = dropSeqlevels(vcf_bxsb, "chrM")
vcf_bxsb = renameSeqlevels(vcf_bxsb, gsub("chr", "", seqlevels(vcf_bxsb)))
var <- read.delim("./BXSB_SNP_filtered.vcf", comment = "#", stringsAsFactors = F)  # filter required
head(var)
var <- read.delim("./BXSB_SNP_filtered.vcf", stringsAsFactors = F)  # filter required
head(var)
?read.delim
var <- read.delim("./BXSB_SNP_filtered.vcf", skip = 23, stringsAsFactors = F)  # filter required
head(var)
option(stringsAsFactors = F)
options(stringsAsFactors = F)
vcf_bxsb
var <- read.delim("./BXSB_SNP_filtered.vcf", skip = 23) # filter required
head(var)
unique(var$FILTER)
names(var)
names(var)[1] <- "CHROM"
head(var)
table(var$CHROM)
plot(table(var$CHROM), type = "h", lwd = 10, ylab = "Number")
txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene
txdb
refGenes <- function(chr, from, to) UcscTrack(genome="mm10", chromosome=chr, track="refGene", from=from, to=to,
trackType="GeneRegionTrack", rstarts="exonStarts", rends="exonEnds", name="Ensembl Genes", fill="red",
gene="name", symbol="name2", transcript="name", strand = "strand")
Il21 <- list(chr = "chr3", tss = "37222759")
Il21 <- list(chr = "chr3", tss = 37222759)
refGenes <- function(chr, from, to) UcscTrack(genome="mm10", chromosome=chr, track="refGene", from=from, to=to,
trackType="GeneRegionTrack", rstarts="exonStarts", rends="exonEnds", name="Ensembl Genes", fill="red",
gene="name", symbol="name2", transcript="name", strand = "strand")
axTrack <- GenomeAxisTrack()
refGenes <- function(chr, from, to)
UcscTrack(genome="mm10", chromosome=chr, track="refGene", from=from, to=to,
trackType="GeneRegionTrack", rstarts="exonStarts", rends="exonEnds", name="Ensembl Genes", fill="red",
gene="name", symbol="name2", transcript="name", strand = "strand")
txTrack <- refGenes(Il21$chr, Il21$tss - 2e7, Il21$tss + 2e7)
range <- list(chr = Il21$chr, start = Il21$tss - 2e7, end = Il21$tss + 2e7)
txTrack <- refGenes(range$chr, range$start, range$end)
plotTracks(list(gTrackX, axTrack, txTrack), from=range$start, to=range$end, transcriptAnnotation="symbol", stackHeight=0.2)
gTrack <- IdeogramTrack(genome = "mm10", chromosome = "chr3")
plotTracks(list(gTrack, axTrack, txTrack), from=range$start, to=range$end, transcriptAnnotation="symbol", stackHeight=0.2)
var <- read.delim("./BXSB_SNP_filtered.vcf", skip = 23) # filter required
names(var)[1] <- "CHROM"
table(var$CHROM)
var$CHROM <- factor(var$CHROM, levels = paste0("chr", c(1:19, "X", "Y")))
table(var$CHROM)
head(var)
?filter
var_Il21 = filter(var, CHROM == range$chr & POS > range$start & POS < range$end)
head(var_Il21)
ggplot(var_Il21, aes(x = POS)) + geom_bar()
ggplot(var_Il21, aes(x = POS)) + geom_bar()
ggplot(var_Il21, aes(x = POS)) + geom_density()
ggplot(var_Il21, aes(x = POS)) + geom_bar(binwidth = 1e6)
ggplot(var_Il21, aes(x = POS)) + geom_bar(binwidth = 1e5)
ggplot(var_Il21, aes(x = POS)) + geom_bar(binwidth = 1e5, fill = "red")
ggplot(var_Il21, aes(x = POS)) +
geom_bar(binwidth = 1e5, fill = "red") +
theme_bw() + xlab("") + ylab("Count") +
coord_cartesian(ylim=c(0, 10))
ggplot(var_Il21, aes(x = POS)) +
geom_bar(binwidth = 1e5, fill = "red") +
theme_bw() + xlab("") + ylab("Count") +
coord_cartesian(ylim=c(0, 9))
ggplot(var_Il21, aes(x = POS)) +
geom_bar(binwidth = 1e6, fill = "red") +
theme_bw() + xlab("") + ylab("Count") +
coord_cartesian(ylim=c(0, 9))
ggplot(var_Il21, aes(x = POS)) +
geom_bar(binwidth = 1e5, fill = "red") +
theme_bw() + xlab("") + ylab("Count") +
coord_cartesian(ylim=c(0, 9))
library(dplyr)
library(Biobase)
library(genefilter)
library(preprocessCore)
library(ggplot2)
library(biomaRt)
library(qvalue)
library(quantro)
library(matrixStats)
library(Hmisc)
setwd("~/Dropbox/GitHub/Lupus/BXSB(rnaseq)")
load("gene_expression_tpm.rdt"); tpm = gene_expression_tpm
colnames(gene_expression_tpm)
data <- gene_expression_tpm[rowMax(gene_expression_tpm) > 10, ] %>% as.data.frame
group <- factor(names(data), levels = c("BXSB", "BXSB_B6"))
group
mart <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
attribute <- c("ensembl_gene_id", "external_gene_name", "description")
matboxplot(data, groupFactor = group)
outlier <- data[rowMax(as.matrix(data)) > 1e4, ] # ENSMUSG00000076609/Igkc is twice in BXSB
data <- data[! rowMax(as.matrix(data)) > 1e4, ]
data <- sweep(data, 2, colSums(data), "/") * 1e6
head(data)
ggplot(var_Il21, aes(x = POS)) + geom_point()
ggplot(var_Il21, aes(x = POS), y = 1) + geom_point()
ggplot(var_Il21, aes(x = POS, y = 1)) + geom_point()
ggplot(var_Il21, aes(x = POS, y = 1)) + geom_bar()
ggplot(var_Il21, aes(x = POS)) + geom_bar()
ggplot(var_Il21, aes(x = POS, y = 1)) + geom_point()
ggplot(var_Il21, aes(x = POS, y = 1)) + geom_point(position = "jitter")
library(Biobase)
mart <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
getBM(attribute, filters = c(chromosome_name, start, end), values = range, mart)
getBM(attribute, filters = c("chromosome_name", "start", "end"), values = range, mart)
range
getBM(attribute, filters = c("chromosome_name", "start", "end"), values = list(3, range$start, range$end), mart)
filters <- c("chromosome_name", "start", "end")
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
genes
names(genes)
genes$external_gene_name
attribute <- c("ensembl_gene_id", "external_gene_name", "chromosome_name", "start_position", "end_position")
filters <- c("chromosome_name", "start", "end")
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
head(genes)
?makeGRangesFromDataFrame
makeGRangesFromDataFrame(genes, seqnames.field = "chromosome_name", start.field = "start_position", end.field = "end_position")
makeGRangesFromDataFrame(genes, keep.extra.columns = T,
seqnames.field = "chromosome_name", start.field = "start_position", end.field = "end_position")
load("./BXSB(rnaseq)/gene_expression_tpm.rdt")
setwd("~/Dropbox/GitHub/Lupus")
load("./BXSB(rnaseq)/gene_expression_tpm.rdt")
data <- gene_expression_tpm[rowMax(gene_expression_tpm) > 10, ] %>% as.data.frame
(group <- factor(names(data), levels = c("BXSB", "BXSB_B6")))
mart <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
data <- data[! rowMax(as.matrix(data)) > 1e4, ]
data <- sweep(data, 2, colSums(data), "/") * 1e6
data$BXSB_avg <- rowMeans(data[group == "BXSB"])
data$BXSB_B6_avg <- rowMeans(data[group == "BXSB_B6"])
head(data)
table(genes$ensembl_gene_id %in% rownames(data))
?match
names(genes)
genes <- filter(genes, ensembl_gene_id %in% rownames(data))
nrow(genes)
head(genes)
genes$external_gene_name
"Il21" %in% rownames(data)
"Il21" %in% genes$external_gene_name
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
"Il21" %in% genes$external_gene_name
genes[genes$external_gene_name == "Il21", ]
"ENSMUSG00000027718" %in% rownames(data)
load("./BXSB(rnaseq)/gene_expression_tpm.rdt")
head(gene_expression_tpm)
"ENSMUSG00000027718" %in% rownames(gene_expression_tpm)
gene_expression_tpm["ENSMUSG00000027718", ]
data <- gene_expression_tpm[rowMax(gene_expression_tpm) > 5, ] %>% as.data.frame
(group <- factor(names(data), levels = c("BXSB", "BXSB_B6")))
data <- data[! rowMax(as.matrix(data)) > 1e4, ]
data <- sweep(data, 2, colSums(data), "/") * 1e6
data$BXSB_avg <- rowMeans(data[group == "BXSB"])
data$BXSB_B6_avg <- rowMeans(data[group == "BXSB_B6"])
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
genes$external_gene_name
genes <- filter(genes, ensembl_gene_id %in% rownames(data))
genes$external_gene_name
head(data)
genes <- cbind(genes, data[genes$ensembl_gene_id, ])
head(genes)
head(data)
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
genes$external_gene_name
genes <- filter(genes, ensembl_gene_id %in% rownames(data))
genes <- cbind(genes, data[genes$ensembl_gene_id, c("BXSB_avg", "BXSB_B6_avg")])
head(genes)
genesGR <- makeGRangesFromDataFrame(genes, keep.extra.columns = T,
seqnames.field = "chromosome_name", start.field = "start_position", end.field = "end_position")
genesGR
data(twoGroups)
twoGroups
dTrack <- DataTrack(genesGR, name = "RNA-seq")
dTrack
genes
seqnames(genesGR)
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
genes <- filter(genes, ensembl_gene_id %in% rownames(data))
genes <- cbind(genes, data[genes$ensembl_gene_id, c("BXSB_avg", "BXSB_B6_avg")])
head(genes)
genes$chromosome_name <- paste0("chr", genes$chromosome_name)
genes$external_gene_name
genes
genesGR <- makeGRangesFromDataFrame(genes, keep.extra.columns = T,
seqnames.field = "chromosome_name", start.field = "start_position", end.field = "end_position")
dTrack <- DataTrack(genesGR, name = "RNA-seq")
dTrack
plotTracks(dTrack)
twoGroups
genesGR
plotTracks(dTrack, groups=rep(c("control", "treated"), each=1), type=c("a","p"), legend=TRUE, aggregateGroups=TRUE)
head(genes)
genes$BXSB_avg
genes <- filter(genes, BXSB_avg < 1e3)
genesGR <- makeGRangesFromDataFrame(genes, keep.extra.columns = T,
seqnames.field = "chromosome_name", start.field = "start_position", end.field = "end_position")
dTrack <- DataTrack(genesGR, name = "RNA-seq")
plotTracks(dTrack)
plotTracks(dTrack, groups=rep(c("control", "treated"), each=1), type=c("a","p"), legend=TRUE, aggregateGroups=TRUE)
plotTracks(dTrack, groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("a","p"), legend=TRUE, aggregateGroups=TRUE)
var$CHROM <- factor(var$CHROM, levels = paste0("chr", c(1:19, "X", "Y")))
table(var$CHROM)
var_Il21 = filter(var, CHROM == range$chr & POS > range$start & POS < range$end)
head(var_Il21)
genesGR
plotTracks(dTrack, groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("s"), legend=TRUE, aggregateGroups=TRUE)
plotTracks(dTrack, groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("p"), legend=TRUE, aggregateGroups=TRUE)
head(var)
varGR <- makeGRangesFromDataFrame(var_Il21, seqnames.field = "CHROM", start.field = "POS", end.field = "POS")
dTrack <- DataTrack(varGR, name = "var")
plotTracks(dTrack)
dTrack <- AnnotationTrack(varGR, name = "var")
plotTracks(dTrack)
plotTracks(dTrack, collapse = T)
plotTracks(dTrack, stacking = squish)
plotTracks(dTrack, stacking = "squish")
plotTracks(dTrack, legend = T)
library(dplyr)
library(ggplot2)
library(genefilter)
library(Gviz)
library(Biobase)
library(biomaRt)
options(stringsAsFactors = F)
rm(list = ls())
setwd("~/Dropbox/GitHub/Lupus")
load("./BXSB(rnaseq)/gene_expression_tpm.rdt")
data <- gene_expression_tpm[rowMax(gene_expression_tpm) > 5, ] %>% as.data.frame
(group <- factor(names(data), levels = c("BXSB", "BXSB_B6")))
data <- data[! rowMax(as.matrix(data)) > 1e4, ]
data <- sweep(data, 2, colSums(data), "/") * 1e6
data$BXSB_avg <- rowMeans(data[group == "BXSB"])
data$BXSB_B6_avg <- rowMeans(data[group == "BXSB_B6"])
Il21 <- list(chr = "chr3", tss = 37222759)
range <- list(chr = Il21$chr, start = Il21$tss - 1e7, end = Il21$tss + 1e7)
mart <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
attribute <- c("ensembl_gene_id", "external_gene_name", "chromosome_name", "start_position", "end_position")
filters <- c("chromosome_name", "start", "end")
genes <- getBM(attribute, filters, values = list(3, range$start, range$end), mart)
genes$external_gene_name
genes <- filter(genes, ensembl_gene_id %in% rownames(data))
genes <- cbind(genes, data[genes$ensembl_gene_id, c("BXSB_avg", "BXSB_B6_avg")])
genes$chromosome_name <- paste0("chr", genes$chromosome_name)
genes$external_gene_name
genes$BXSB_avg
rnaGR <- makeGRangesFromDataFrame(genes, keep.extra.columns = T,
seqnames.field = "chromosome_name", start.field = "start_position", end.field = "end_position")
dTrack <- DataTrack(rnaGR, name = "RNA-seq")
plotTracks(dTrack, groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("s"), legend=TRUE, aggregateGroups=TRUE)
rnaTrack <- DataTrack(rnaGR, name = "RNA-seq")
plotTracks(rnaTrack, groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("s"), legend=TRUE, aggregateGroups=TRUE)
dTrack <- AnnotationTrack(rnaGR, name = "Genes")
plotTracks(dTrack)
rnaGR
dTrack <- AnnotationTrack(rnaGR, name = "Genes", symbol = "external_gene_name")
plotTracks(dTrack)
plotTracks(dTrack,  transcriptAnnotation="symbol")
dTrack <- AnnotationTrack(rnaGR, name = "Genes", symbol = "external_gene_name")
plotTracks(dTrack, transcriptAnnotation="symbol")
dTrack
grtrack <- GeneRegionTrack(rnaGR, name = "Gene", transcriptAnnotation = "external_gene_name")
plotTracks(grtrack)
rnaGR
grTrack <- AnnotationTrack(rnaGR, name = "Genes", showFeatureId = T)
plotTracks(grTrack)
head(genes)
geneGR <- with(genes, GRanges(chromosome_name, IRanges(start_position, end_position), id = external_gene_name))
data_track <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T)
plotTracks(data_track)
plotTracks(rnaTrack, groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("s"), legend=TRUE, aggregateGroups=TRUE)
?AnnotationTrack
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, bar = "darkgreen")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor.group = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", col = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", just.group = "above")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor.group = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor.group = 1)
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor = 1, fontcolor.group = 1)
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor = 2, fontcolor.group = 1)
plotTracks(grTrack)
plotTracks(grTrack, labelPos = "below",showId=TRUE, col="red")
plotTracks(grTrack, labelPos = "below",showId=TRUE, fontcolor="red")
plotTracks(grTrack, labelPos = "below",showFeatureId=TRUE, fontcolor="red")
plotTracks(grTrack, showFeatureId=TRUE, fontcolor="red")
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", col.id = "red")
plotTracks(grTrack)
plotTracks(grTrack, col.id = "red")
plotTracks(grTrack, fontcolor="#808080")
plotTracks(grTrack, fontcolor="#208080")
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "red", col.id = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", width = 20, showFeatureId = T, fill = "red", col.id = "red")
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes",showFeatureId = T, fill = "red", cex = 0.5)
plotTracks(grTrack)
var <- read.delim("./WES/BXSB_SNP_filtered.vcf", skip = 23) # filter required
names(var)[1] <- "CHROM"
var$CHROM <- factor(var$CHROM, levels = paste0("chr", c(1:19, "X", "Y")))
table(var$CHROM)
var_Il21 = filter(var, CHROM == range$chr & POS > range$start & POS < range$end)
varGR <- makeGRangesFromDataFrame(var_Il21, seqnames.field = "CHROM", start.field = "POS", end.field = "POS")
dTrack <- AnnotationTrack(varGR, name = "var")
plotTracks(dTrack)
varTrack <- AnnotationTrack(varGR, name = "var")
plotTracks(varTrack)
plotTracks(list(rnaTrack, varTrack, grTrack))
plotTracks(list(rnaTrack, varTrack, grTrack), stackHeight = 0.2)
plotTracks(list(grTrack, rnaTrack, varTrack), stackHeight = 0.2)
ggplot(var_Il21, aes(x = POS)) +
geom_bar(binwidth = 1e5, fill = "red") +
theme_bw() + xlab("") + ylab("Count") +
coord_cartesian(ylim=c(0, 9))
rnaTrack <- DataTrack(rnaGR, name = "RNA-seq", groups=rep(c("BXSB", "BXSB_B6"), each=1), type=c("s"), legend=TRUE, aggregateGroups=TRUE)
plotTracks(list(grTrack, rnaTrack, varTrack), stackHeight = 0.2)
rnaTrack <- DataTrack(rnaGR, name = "RNA-seq", groups=rep(c("BXSB", "BXSB_B6"), each=1), type="s", legend=TRUE)
plotTracks(rnaTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "grey70")
plotTracks(list(grTrack, rnaTrack, varTrack), stackHeight = 0.2)
varTrack <- AnnotationTrack(varGR, name = "var", fill = "red")
plotTracks(varTrack)
plotTracks(list(grTrack, rnaTrack, varTrack), stackHeight = 0.2)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor.feature = 1)
plotTracks(grTrack)
grTrack <- AnnotationTrack(geneGR, name = "Genes", showFeatureId = T, fill = "darkgreen", fontcolor.feature = "red")
plotTracks(grTrack)
plotTracks(list(grTrack, rnaTrack, varTrack), stackHeight = 0.2)
plotTracks(grTrack)
plotTracks(grTrack, stacking = "full")
plotTracks(grTrack, stacking = "none")
plotTracks(grTrack, stacking = "hide")
plotTracks(grTrack, stacking = "dense")
plotTracks(grTrack, stacking = "squish")
plotTracks(grTrack, stacking = "pack")
plotTracks(grTrack, stacking = "full")
plotTracks(list(grTrack, rnaTrack, varTrack), stackHeight = 0.2)
ggplot(var_Il21, aes(x = POS)) +
geom_bar(binwidth = 1e5, fill = "red") +
theme_bw() + xlab("") + ylab("Count") +
coord_cartesian(ylim=c(0, 9))
head(genes)
plot(genes$start_position, BXSB_avg)
plot(genes$start_position, genes$BXSB_avg)
plot(genes$start_position, genes$BXSB_avg, type = "b")
plotTracks(rnaTrack)
plotTracks(rnaTrack, from = range$start)
plotTracks(rnaTrack, from = range$start, to = range$end)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "a", legend = T)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "s", legend = T)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "s", legend = T, lwd = 2)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "s", legend = T, lwd = 2, cex = 2)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "s", legend = T, lwd = 2, cex.legend = 2)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "p", legend = T, lwd = 2, cex.legend = 2)
pdf("pdf/rna-seq.pdf", width = 9, height = 3)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "p", legend = T, lwd = 2, cex.legend = 2)
dev.off()
pdf("pdf/rna-seq.pdf", width = 9, height = 3)
plotTracks(rnaTrack, from = range$start, to = range$end, type = "p", legend = T, lwd = 2, cex.legend = 1)
dev.off()
plotTracks(varTrack)
plotTracks(varTrack, from = range$start, to = range$end)
pdf("pdf/var.pdf", width = 9, height = 3)
plotTracks(varTrack, from = range$start, to = range$end)
dev.off()
plotTracks(varTrack, from = range$start, to = range$end, col = "red")
pdf("pdf/var.pdf", width = 9, height = 3)
plotTracks(varTrack, from = range$start, to = range$end, col = "red")
dev.off()
plotTracks(list(rnaTrack, varTrack), stackHeight = 0.2)
rnaTrack <- DataTrack(rnaGR, name = "RNA-seq", groups=rep(c("BXSB", "BXSB_B6"), each = 1))
plotTracks(list(rnaTrack, varTrack), stackHeight = 0.2)
plotTracks(list(rnaTrack, varTrack), legend = T)
plotTracks(list(rnaTrack, varTrack), legend = T, lwd = 2)
plotTracks(list(rnaTrack, varTrack), legend = T, lwd = 2, col = "red")
varTrack <- AnnotationTrack(varGR, name = "var", col = "red")
plotTracks(list(rnaTrack, varTrack), legend = T, lwd = 2)
pdf("pdf/gviz.pdf", width = 9, height = 3)
plotTracks(list(rnaTrack, varTrack), legend = T, lwd = 2)
dev.off()
pdf("pdf/gviz.pdf", width = 9, height = 5)
plotTracks(list(rnaTrack, varTrack), legend = T, lwd = 2)
dev.off()
